#!/bin/sh

. /lib/functions.sh

OVERLAY="$( grep ' /overlay ' /proc/mounts )"

case "$ACTION" in
pressed)
	[ -z "$OVERLAY" ] && return 0

	return 5
;;
timeout)
	. /etc/diag.sh
	set_state failsafe
;;
released)
	if [ "$SEEN" -lt 2 ]
	then
		if [[ -e /root/config/wps-timeout ]]; then
			wpstmout=$(cat /root/config/wps-timeout)
		else
			wpstmout=120
		fi
		wpssleeptime=2
		let wpstmoutcnt=wpstmout/wpssleeptime
		let wpstmoutcntmod=wpstmout%wpssleeptime
		[ $wpstmoutcntmod -gt 0 ] && let wpstmoutcnt=wpstmoutcnt+1

		logger -t WPS detected push button for wps
		echo "WPS..." > /dev/console
		WPSLED=$(ls /sys/devices/platform/leds/leds/)
		echo timer > /sys/devices/platform/leds/leds/$WPSLED/trigger
		cd /var/run/hostapd
		for socket in *; do
			[ -S "$socket" ] || continue
			hostapd_cli -i "$socket" wps_pbc
			logger -t WPS "$socket" actived
		done

#		echo "sleep 2" > /dev/console
		sleep $wpssleeptime
		cnt=1
		for socket in *; do
			[ -S "$socket" ] || continue
			for i in $(seq 1 $wpstmoutcnt); do
				if [[ ! -z "$(hostapd_cli -i "$socket" wps_get_status | grep 'PBC Status: Active')" ]]; then
#					echo "sleep 2" > /dev/console
					sleep $wpssleeptime
					let cnt=cnt+1
					if [ $cnt == $wpstmoutcnt ]; then
#						echo "No Active, So Exit !!!" > /dev/console
						logger -t WPS deactived
						echo default-on > /sys/devices/platform/leds/leds/$WPSLED/trigger
						exit 0
					fi
				fi
			done
		done

		echo default-on > /sys/devices/platform/leds/leds/$WPSLED/trigger
	elif [ "$SEEN" -ge 10 -a -n "$OVERLAY" ]
	then
		echo "FACTORY RESET" > /dev/console
		logger detected push button for factory reset
		jffs2reset -y && reboot &
	elif [ "$SEEN" -ge 2 ]
	then
		echo "REBOOT" > /dev/console
		logger detected push button for reset
		sync
		reboot
	fi
;;
esac

return 0
