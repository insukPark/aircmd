#!/bin/sh

. /lib/functions.sh

OVERLAY="$( grep ' /overlay ' /proc/mounts )"

case "$ACTION" in
pressed)
	[ -z "$OVERLAY" ] && return 0

	return 5
;;
timeout)
	. /etc/diag.sh
	set_state failsafe
;;
released)
	if [ "$SEEN" -lt 2 ]
	then
		if [[ -e /root/config/wps-timeout ]]; then
			wpstmout=$(cat /root/config/wps-timeout)
		else
			wpstmout=120
		fi
		wpssleeptime=2
		let wpstmoutcnt=wpstmout/wpssleeptime
		let wpstmoutcntmod=wpstmout%wpssleeptime
		[ $wpstmoutcntmod -gt 0 ] && let wpstmoutcnt=wpstmoutcnt+1

		logger -t WPS detected push button for wps
		echo "WPS..." > /dev/console
		WPSLED=$(ls /sys/devices/platform/leds/leds/)
		echo timer > /sys/devices/platform/leds/leds/$WPSLED/trigger
		# -gt 3 means keep going if remain-time over 6sec
		while [ $wpstmoutcnt -gt 3 ]; do
			cd /var/run/hostapd
			for socket in *; do
				[ -S "$socket" ] || continue
				hostapd_cli -i "$socket" wps_pbc
				logger -t WPS "$socket" actived
			done
	
#			echo "sleep 2" > /dev/console
			sleep $wpssleeptime
			cnt=1
			for socket in *; do
				[ -S "$socket" ] || continue
				for iii in $(seq 1 $wpstmoutcnt); do
					if [[ -e /var/wps-stop ]]; then
						logger -t WPS push-button-wps deactived with stop-command
						rm -rf /var/wps-stop
						for socket in *; do
							[ -S "$socket" ] || continue
							hostapd_cli -i "$socket" wps_cancel
							logger -t WPS "$socket" canceled
						done
						echo default-on > /sys/devices/platform/leds/leds/$WPSLED/trigger
						exit 0
					elif [[ ! -z "$(hostapd_cli -i "$socket" wps_get_status | grep 'PBC Status: Overlap')" ]]; then
						logger -t WPS deactived with overlap status
						killall -9 hostapd
						exit 0
					elif [[ ! -z "$(hostapd_cli -i "$socket" wps_get_status | grep 'PBC Status: Timed-out')" ]]; then
						let wpstmoutcnt=wpstmoutcnt-60
						break
					elif [[ ! -z "$(hostapd_cli -i "$socket" wps_get_status | grep 'PBC Status: Disabled')" ]]; then
						let wpstmoutcnt=0
						echo default-on > /sys/devices/platform/leds/leds/$WPSLED/trigger
						exit 0
					elif [[ ! -z "$(hostapd_cli -i "$socket" wps_get_status | grep 'PBC Status: Active')" ]]; then
#						echo "sleep 2" > /dev/console
						sleep $wpssleeptime
						let cnt=cnt+1
						if [ $cnt == $wpstmoutcnt ]; then
#							echo "No Active, So Exit !!!" > /dev/console
							logger -t WPS deactived
							echo default-on > /sys/devices/platform/leds/leds/$WPSLED/trigger
							exit 0
						fi
					fi
				done
			done
		done

		echo default-on > /sys/devices/platform/leds/leds/$WPSLED/trigger
	elif [ "$SEEN" -ge 10 -a -n "$OVERLAY" ]
	then
		echo "FACTORY RESET" > /dev/console
		logger detected push button for factory reset
		jffs2reset -y && reboot &
	elif [ "$SEEN" -ge 2 ]
	then
		echo "REBOOT" > /dev/console
		logger detected push button for reset
		sync
		reboot
	fi
;;
esac

return 0
